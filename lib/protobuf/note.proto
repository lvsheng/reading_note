syntax = "proto3";

message NoteBookMeta {
    uint32 lastPageId = 1; // pageId直接作为该page数据文件的文件名
    map<uint32/*pageNumber*/, uint32/*pageId*/> pages = 2; // 每个int值即对应page的pageId
}

message NotePage {
    float width = 1; // IndependentNote:可无限扩展，MarkNote:需与对应book中该页尺寸完全一致
    float height = 2; // IndependentNote:高度增加限制以构造多页效果，MarkNote:需与对应book中该页尺寸完全一致
    repeated NotePageItem items = 3;
    oneof content {
        IndependentNotePageData independentNoteData = 4;
        MarkNotePageData markNoteData = 5;
    }
    map<uint32, Pen> penPool = 6;
}

message IndependentNotePageData { // 独立笔记本的特有数据
    uint32 lastMattingResultId = 1;
    map<uint32, MattingResult> mattingResultPool = 2; // 内容来自MattingMark区域的截图
}

message MarkNotePageData { // 书内标记的特有数据
    uint32 lastMattingMarkId = 1;
    map<uint32, MattingMark> mattingMarkPool = 2;
}

message NotePageItem {
    float x = 1;
    float y = 2;
    oneof content {
        Path path = 3; // 其内point的位置为参照起点的相对位置
        uint32 mattingMarkId = 4; // IndependentNote时有效。为方便直接获取截图区域，其内的坐标与起点有信息重复
        uint32 mattingResultId = 5; // only for MarkNote
    }
    optional float scale = 6;
}

message Path {
    uint32 penId = 1;
    repeated Point points = 2;
}

message Pen {
    PenType penType = 1;
    uint32 color = 2;
    float strokeWidth = 3;
}

enum PenType {
    PT_BALL_POINT_PEN = 0;
}

message Point {
    float x = 1;
    float y = 2;
}

enum ImageType {
    IT_2BIT_1CHANNEL = 0;
}

message MattingResult {
    uint32 bookPageNumber = 1;
    uint32 bookPageMattingMarkId = 2;
    optional ImageType imageType = 3;
    uint32 imageWidth = 4;
    uint32 imageHeight = 5;
    bytes imageData = 6;
}

message MattingMark {
    optional uint32 color = 1;
    oneof content {
        MattingMarkHorizontal horizontal = 2;
        MattingMarkVertical vertical = 3;
        MattingMarkLine line = 4;
        MattingMarkRectangle rectangle = 5;
    }
    repeated uint32  linkingIndependentNoteId = 6;
}

message MattingMarkHorizontal {
    float left = 1;
    float right = 2;
    float y = 3;
    float height = 4;
}

message MattingMarkVertical {
    float x = 1;
    float top = 2;
    float bottom = 3;
    float lineWidth = 4;
}

message MattingMarkLine {
    float startX = 1;
    float startY = 2;
    float endX = 3;
    float endY = 4;
    float lineWidth = 5;
}

message MattingMarkRectangle {
    float leftTopX = 1;
    float leftTopY = 2;
    float rightBottomX = 3;
    float rightBottomY = 4;
}

/*
message MattingMarkFreeArea {
    repeated Point points = 1;
}
*/
